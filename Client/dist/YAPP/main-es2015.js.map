{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/user-interface.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\r\n    path: '', loadChildren: () => import('./session/session.module').then(m => m.SessionModule)\n  }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'YAPP';\n}\n\n//if (typeof Worker !== 'undefined') {\n//  // Create a new\n//  const worker = new Worker('./app.worker', { type: 'module' });\n//  worker.onmessage = ({ data }) => {\n//    console.log(`page got message: ${data}`);\n//  };\n//  worker.postMessage('hello');\n//} else {\n//  // Web Workers are not supported in this environment.\n//  // You should add a fallback so that your program still executes correctly.\n//}\n","<div mat-app-background>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientXsrfModule, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { UserInterfaceModule } from './shared/user-interface.module';\r\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientXsrfModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    UserInterfaceModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    FlexLayoutModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSlideToggleModule,\r\n    MatSelectModule\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    FlexLayoutModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSlideToggleModule,\r\n    MatSelectModule\r\n  ]\r\n})\r\nexport class UserInterfaceModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: ''\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}