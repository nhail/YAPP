<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="VSLangProj" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
 var dte = (this.Host as IServiceProvider).GetService(typeof(EnvDTE.DTE))
                 as EnvDTE.DTE;
#>
// Do not modify this file directly it will be overwritten by t4 template!!!!
//    this converts Microsoft.AspNetCore.Http.HttpMethods Static Verbs to Constants 
namespace <#=dte.Solution.FindProjectItem(this.Host.TemplateFile).Properties.Item("CustomToolNamespace").Value.ToString()#>
{
     public static class HttpVerbs
     {
<#
foreach (var kv in GetHttpVerbs(dte))
{
#>
         public const string <#=kv.Key#> = "<#=kv.Value#>";
<#
}
#>
     }
}
<#
IDictionary<string, string> GetHttpVerbs(EnvDTE.DTE dte)
{
    var templateItem = dte.Solution.FindProjectItem(this.Host.TemplateFile);
    var project = templateItem.ContainingProject;
    var vsProject = project.Object as VSLangProj.VSProject;
    foreach(var referenceObj in vsProject.References)
    {
        var reference = (VSLangProj.Reference)referenceObj;
        if(reference.Name == "Microsoft.AspNetCore.Http.Abstractions")
        { 
            var abstractionsAssembly = System.Reflection.Assembly.LoadFile(reference.Path);
            var httpMethodsType = abstractionsAssembly.GetType("Microsoft.AspNetCore.Http.HttpMethods");

            return httpMethodsType.GetFields(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Static)
                .Where(x => x.FieldType == typeof(string))
                .ToDictionary(x => x.Name, x => (string) x.GetValue(null));
       }
    }
    throw new System.DllNotFoundException("Microsoft.AspNetCore.Http.Abstractions");
}
#>